buildscript {
    dependencies {
        classpath 'com.ampznetwork.modsuite:buildscripts'
    }
}

plugins {
    id 'com.ampznetwork.modsuite.buildscripts'
    id 'org.comroid.codegen.spigot' apply false
}

ext {
    debug = "true" == System.getenv("DEBUG")
}

tasks.maybeCreate('clean', Delete).configure {
    delete "$projectDir/run/spigot/cache"
    delete "$projectDir/run/spigot/libraries"
    delete "$projectDir/run/spigot/logs"
    delete "$projectDir/run/spigot/plugins/.paper-remapped"
    delete "$projectDir/run/spigot/versions"
}

getTasksByName('compileJava', true)*.dependsOn gradle.includedBuilds*.task(':jar')

apply from: 'gradle/scripts/versions.gradle'
apply from: 'gradle/scripts/setup/requirements.gradle'

evaluationDependsOnChildren()

apply from: 'gradle/scripts/setup/artifacts.gradle'
apply from: 'gradle/scripts/setup/intellij.gradle'
apply from: 'gradle/scripts/setup/global.gradle'

subprojects { p ->
    if (p.path.split(':').length != 3 || p.path.contains("AurionChat")) {
        //println "out: $p"
        return;
    }
    //println "in: $p"
    p.tasks.findByName('shadowJar')?.configure {
        //println "task: $it"
        it.from project(":$p.parent.name:api").sourceSets.main.output
        it.from project(":$p.parent.name:core").sourceSets.main.output
        if (p.parent.name == 'ChatMod') {
            it.from project(":ChatMod:discord").sourceSets.main.output
            it.from project(":ChatMod:AurionChat:api").sourceSets.main.output
        }
    }

    tasks.findByName("installDist")?.configure {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}
