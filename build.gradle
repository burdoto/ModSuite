import com.ampznetwork.buildscripts.model.FileRequirement
import com.ampznetwork.buildscripts.task.DownloadRequirementsTask

buildscript {
    dependencies {
        classpath 'com.ampznetwork.modsuite:buildscripts'
    }
}

plugins { id 'com.ampznetwork.modsuite.buildscripts' }

ext {
    debug = "true" == System.getenv("DEBUG")
}

apply from: 'gradle/versions.gradle'

tasks.maybeCreate('downloadRequirements', DownloadRequirementsTask).neededFiles.addAll([
        new FileRequirement("paper", "spigot", null, "https://api.papermc.io/v2/projects/paper/versions/1.21.1/builds/33/downloads/paper-1.21.1-33.jar"),
        new FileRequirement("arclight", "spigot", null, "https://github.com/IzzelAliz/Arclight/releases/download/FeudalKings%2F1.0.0-SNAPSHOT/arclight-neoforge-1.21-1.0.0-SNAPSHOT.jar"),
        //new FileRequirement("placeholderapi", "spigot", "plugins", "https://www.spigotmc.org/resources/placeholderapi.6245/download?version=541946"),
        //new FileRequirement("luckperms", "spigot", "plugins", "https://www.spigotmc.org/resources/luckperms.28140/download?version=544174"),
        new FileRequirement("spark", "spigot", "mods", "https://cdn.modrinth.com/data/l6YH9Als/versions/mHuABI9W/spark-1.10.97-neoforge.jar"),

        new FileRequirement("fabric", "fabric", null, "https://meta.fabricmc.net/v2/versions/loader/1.20.1/0.16.7/1.0.1/server/jar"),
        //new FileRequirement("arclight", "fabric", null, "https://github.com/IzzelAliz/Arclight/releases/download/FeudalKings%2F1.0.0-SNAPSHOT/arclight-fabric-1.21-1.0.0-SNAPSHOT.jar"),
        new FileRequirement("fabric-api", "fabric", "mods", "https://cdn.modrinth.com/data/P7dR8mSH/versions/P7uGFii0/fabric-api-0.92.2%2B1.20.1.jar"),
        new FileRequirement("luckperms", "fabric", "mods", "https://cdn.modrinth.com/data/Vebnzrzj/versions/oLykW1F8/LuckPerms-Fabric-5.4.139.jar"),
        new FileRequirement("spark", "fabric", "mods", "https://cdn.modrinth.com/data/l6YH9Als/versions/qTSaozEL/spark-1.10.97-fabric.jar"),
])

// elevate LibMod parts
subprojects.findAll { plugins.hasPlugin('java') }.forEach {
    dependencies {
        for (String sub : new String[]{'api', 'core', 'spigot', 'forge', 'fabric'}) {
            print ":$parent.name:$project.name -> $sub: "
            if (parent.name != 'LibMod' && project.name == sub) {
                api project(':LibMod:' + sub)
                println 'yes'
            } else println 'no'
        }
        if (parent.name != 'LibMod' && project.name == 'api')
            compileOnly project(':LibMod:core')
    }
}
