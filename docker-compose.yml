name: modsuite

volumes:
  plugins:
  config:
  mods:
  spigot:
  fabric:
  botconfig:
  database:
  rabbitmq:

networks:
  internal:
    driver: ${NETWORK_MODE:-bridge}
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: 0.0.0.0

services:
  init:
    image: ubuntu
    networks: [ internal ]
    profiles: [ server, discordbot ]
    command: |
      cp -v /data/plugins/ChatMod/config.${INCLUDE_BOT:-exclude}.yml /data/plugins/ChatMod/config.yml
    volumes:
      - /srv/cred/discord:/srv/cred/discord:rw
      - plugins:/data/plugins:rw

  spigot_server:
    build:
      context: run/spigot
    restart: on-failure
    networks: [ internal ]
    profiles: [ server ]
    environment:
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 #-Dlog4j.debug=true
      TZ: "Europe/Berlin"
      MEMORYSIZE: "4G"
      DEBUG: 'true'
    volumes:
      # dev plugins from image
      - plugins:/data/plugins:rw
      # avoid world wipes
      - ${DEV_HOME}/run/spigot/world:/data/world:rw
      - ${DEV_HOME}/run/spigot/world_nether:/data/world_nether:rw
      - ${DEV_HOME}/run/spigot/world_the_end:/data/world_the_end:rw
      # discord bot token location
      - /srv/cred/discord:/srv/cred/discord:r
      - spigot:/data:rw
    ports:
      - "0.0.0.0:5005:5005"
      - "0.0.0.0:25565:25565"
    depends_on:
      init:
        restart: true
        condition: service_completed_successfully
      database:
        required: false
        condition: service_healthy
      rabbitmq:
        required: false
        condition: service_healthy

  fabric_server:
    build:
      context: run/fabric
    restart: on-failure
    networks: [ internal ]
    profiles: [ server ]
    environment:
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 #-Dlog4j.debug=true
      MAX_MEMORY: "4G"
      DEBUG: true
    volumes:
      # dev mods & config from image
      - config:/data/config:rw
      - mods:/data/mods:rw
      # avoid world wipes
      - ${DEV_HOME}/run/fabric/world:/data/world:rw
      - ${DEV_HOME}/run/fabric/world_nether:/data/world_nether:rw
      - ${DEV_HOME}/run/fabric/world_the_end:/data/world_the_end:rw
      # discord bot token location
      - /srv/cred/discord:/srv/cred/discord:r
      - fabric:/data:rw
    ports:
      - "0.0.0.0:5007:5007"
      - "0.0.0.0:25567:25567"
    depends_on:
      database:
        required: false
        condition: service_healthy
      rabbitmq:
        required: false
        condition: service_healthy

  discordbot:
    build:
      context: ChatMod/discord
    restart: on-failure
    networks: [ internal ]
    profiles: [ discordbot ]
    environment:
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
      DEBUG: 'true'
    volumes:
      - /srv/cred/discord:/srv/cred/discord:r
      - botconfig:/srv/chatmod:rw
    ports:
      - "0.0.0.0:5006:5006"
    depends_on:
      init:
        restart: true
        condition: service_completed_successfully
      rabbitmq:
        required: false
        condition: service_healthy

  database:
    hostname: database
    image: mariadb:lts
    restart: unless-stopped
    networks: [ internal ]
    profiles: [ backend ]
    environment:
      MARIADB_USER: dev
      MARIADB_PASSWORD: dev
      MARIADB_DATABASE: dev
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: 1
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ${DEV_HOME}/run/database/dump.sql:/docker-entrypoint-initdb.d/dump.sql:r
      - database:/var/lib/mysql:rw

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3-management
    restart: unless-stopped
    networks: [ internal ]
    profiles: [ backend ]
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      start_period: 5s
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - rabbitmq:/var/lib/rabbitmq:rw
    ports:
      - "0.0.0.0:55672:15672"
