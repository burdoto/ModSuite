pluginManagement {
    repositories {
        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
        }
        mavenCentral()
        gradlePluginPortal()
        maven {
            name = 'MinecraftForge'
            url = 'https://maven.minecraftforge.net/'
        }
    }

    includeBuild('build-src')
}

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        //classpath 'com.ampznetwork:build-src'
        classpath 'de.undercouch:gradle-download-task:5.5.0'
        classpath 'com.github.johnrengelman.shadow:com.github.johnrengelman.shadow.gradle.plugin:8.1.1'
        classpath 'org.gradle.toolchains.foojay-resolver:org.gradle.toolchains.foojay-resolver.gradle.plugin:0.9.0'
    }
}

rootProject.name = 'ModSuite'

apply plugin: 'org.gradle.toolchains.foojay-resolver'
apply plugin: 'com.ampznetwork.build-src'

boolean includeSubpart(var main, var sub) {
    def path = sub == null ? "./$main/" : "./$main/$sub/";
    if (!file(path).exists())
        return false
    def name = sub == null ? ":$main" : ":$main:$sub"
    include(name)
    def project = project(name)
    project.projectDir = file(path)
    return true
}

void includeMod(var key) {
    if (!file("./$key/").exists())
        return
    boolean any = false
    // compile dependency modules
    //any = any | includeSubpart(key, 'compile-forge')
    any = any | includeSubpart(key, 'compile-fabric')

    // mod modules
    any = any | includeSubpart(key, 'api')
    any = any | includeSubpart(key, 'core')
    any = any | includeSubpart(key, 'spigot')
    //any = any | includeSubpart(key, 'forge')
    any = any | includeSubpart(key, 'fabric')

    // extra modules
    any = any | includeSubpart(key, 'discord')
    any = any | includeSubpart(key, 'web')

    if (!any) // is single part mod
        includeSubpart(key, null)
}

includeMod('LibMod')
includeMod('LagMod')
includeMod('BanMod')
includeMod('ChatMod')
includeMod('WorldMod')

//includeMod('ElectricMod')

includeMod('TestingBot')

var dirApi = file('../java/japi/')
if (!dirApi.exists())
    dirApi = file('../java/api')
if (!dirApi.exists())
    dirApi = file('../japi')
if (dirApi.exists()) {
    include(':japi')
    project(':japi').projectDir = dirApi
}
