pluginManagement {
    repositories {
        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
        }
        mavenCentral()
        gradlePluginPortal()
        maven {
            name = 'MinecraftForge'
            url = 'https://maven.minecraftforge.net/'
        }
    }
}

plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.8.0'
}

rootProject.name = 'ModSuite'

boolean includeSubpart(var main, var sub)  {
    def path = sub == null ? "./$main/" : "./$main/$sub/";
    if (!file(path).exists())
        return false
    def name = sub==null?":$main":":$main:$sub"
    include(name)
    def project = project(name)
    project.projectDir = file(path)
    return true
}

void includeMod(var key) {
    if (!file("./$key/").exists())
        return
    boolean any = false
    // compile dependency modules
    any = any | includeSubpart(key, 'compile-forge')
    any = any | includeSubpart(key, 'compile-fabric')

    // mod modules
    any = any | includeSubpart(key, 'api')
    any = any | includeSubpart(key, 'core')
    any = any | includeSubpart(key, 'spigot')
    any = any | includeSubpart(key, 'forge')
    any = any | includeSubpart(key, 'fabric')

    if (!any) // is single part mod
        includeSubpart(key, null)
}

includeMod('LibMod')
includeMod('LagMod')
includeMod('BanMod')
includeMod('WorldMod')

var dirApi = file('../java/japi/')
if (!dirApi.exists())
    dirApi = file('../java/api')
if (!dirApi.exists())
    dirApi = file('../japi')
if (dirApi.exists()) {
    include(':japi')
    project(':japi').projectDir = dirApi
}
