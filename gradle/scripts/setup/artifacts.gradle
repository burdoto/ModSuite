static String capitalize(String str) {
    return Character.toUpperCase(str.charAt(0)).toString() + str.substring(1)
}

[
        ['spigot', 'plugins', 'shadowJar'],
        ['forge', 'mods', 'shadowJar'],
        ['fabric', 'mods', 'remappedShadowJar']
].forEach { notation ->
    var type = notation[0]
    subprojects.findAll { it.name == type }
            .collect { p ->
                if (p.parent.name == 'AurionChat' || p.name != 'fabric')
                    return null
                def result = p.tasks.findByName(notation[2]) ?: p.tasks.findByName('jar')
                if (result == null) println "Could not find suitable artifact task for $p.path"
                return result
            }
            .findAll(Objects::nonNull)
            .collect { t ->
                tasks.register("copy${capitalize(type)}${capitalize(t.project.parent.name)}Jar", Copy) { c ->
                    dependsOn t
                    group = 'test setup'
                    from t.outputs.files.singleFile
                    into "$rootDir/run/$type/${notation[1]}"
                    rename { "${t.project.parent.name}.jar" }
                }.get()
            }
            .forEach { c ->
                tasks.register("prepare${capitalize(type)}Test") {
                    group = 'test setup'
                }.get().dependsOn c
            }
}
